<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="project.mapper.DiaryMapper">

	<!-- 개인 일기 목록에 들어갔을 때(현재 년, 월에 맞는 결과만 출력) -->
	<select id="selectPrivateList" resultType="project.dto.DiaryDto">
		  select diary_id, diary_content, diary_img, member_id
			from t_diary
		   where DATE_FORMAT(created_dt, '%Y-%m') = DATE_FORMAT(now(), '%Y-%m')
		order by created_dt
	</select>

	<insert id="insertGoal" parameterType="project.dto.GoalDto">
		insert into t_goal
		(member_id, goal_contents, goal_date, acheive_yn)
		values
		(#{memberId}, #{goalContents}, now(), #{acheiveYn})
	</insert>

	<update id="updateGoal" parameterType="String">
		update t_goal
		set goal_id = #{goalId},
		goal_contents = #{goalContents},
		goal_date = now(),
		acheive_yn = #{acheiveYn}
		where member_id = #{memberId}
	</update>
	
	<!-- 특정 날짜를 선택했을 때 -->
	<select id="selectPrivateByCreatedDb" parameterType="String" resultType="project.dto.DiaryDto">
		select diary_id, diary_content, diary_img, member_id 
		  from t_diary
		 where DATE_FORMAT(created_dt, '%Y-%m-%d') = DATE_FORMAT(#{created_dt}, '%Y-%m-%d')
	</select>
	
	<insert id="insertPrivate"  parameterType="project.dto.DiaryDto">
		insert into t_diary (member_id, diary_content, diary_img, mood_id, weather_id)
		values (#{memberId}, #{diaryContent}, #{diaryImg},
				#{moodId}, #{weatherId})
	</insert>
	
	<!-- 날씨 선택 화면 출력 -->
	<select id="weatherList" resultType="project.dto.WeatherDto">
		 select weather_id, weather_img
		   from t_weather
	</select>
	
	<!-- 기분 선택 화면 출력 -->
	<select id="moodList" resultType="project.dto.MoodDto">
		 select mood_id, mood_img
		   from t_mood
	</select>
	
	<!-- 상세 화면 출력 -->
	<select id="selectPrivateDetail" parameterType="INTEGER" resultType="project.dto.DiaryDto">
		select diary_content, created_dt, diary_img, mood_id, weather_id
		  from t_diary
		 where diary_id = #{diaryId}
	</select>
	
	<update id="updatePrivate" parameterType="project.dto.DiaryDto">
		update t_diary
		   set diary_content = #{diaryContent}
		 where diary_id = #{diaryId}
	</update>
	
	<delete id="deletePrivate" parameterType="integer">
		 update t_diary
			set deleted_yn = "Y",
				deleted_dt = now()
		  where diary_id = #{diaryId}
	</delete>
	
	<select id="selectPublicList" resultType="project.dto.ShareRoomDto">
		select member_id, share_room_id, share_room_name
		  from t_share_room
		 	
	</select>
	
	<select id="selectPublicShareList" resultType="project.dto.ShareMemberDto">
		select share_member_id, share_room_id, member_id
	      from t_share_member
		 where DATE_FORMAT(created_dt, '%Y-%m') = DATE_FORMAT(now(), '%Y-%m')
	</select>
	
	<insert id="insertPublic" parameterType="project.dto.DiaryDto">
		insert into t_diary(member_id, share_room_id, diary_id, diary_content,
							diary_img, mood_id, weather_id, created_dt)
		values (#{memberId}, #{shareRoomId}, #{diaryId}, #{diaryContent},
				#{diaryImg}, #{moodId}, #{weatherId}, now())
	</insert>
	
	<select id="selectPublicDetail" parameterType="integer" resultType="project.dto.DiaryDto">
		select diary_id, member_id, share_room_id, diary_content,
				created_dt, diary_img, mood_id, weather_id
		  from t_diary
		 where share_room_id = #{shareRoomId}
	</select>
	
	<update id="updatePublic" parameterType="project.dto.DiaryDto">
		 update t_diary
			set diary_content = #{diaryContent},
				diary_img = #{diaryImg},
				mood_id = #{moodId},
				weather_id = #{weatherId},
				member_id = #{memberId}
			where diary_id = #{diaryId} and share_room_id = #{shareRoomId}
	</update>
	
	<update id="deletePublic" parameterType="map">
		 update t_diary
			set deleted_yn = "Y",
				deleted_dt = now()
		  where share_room_id = #{shareRoomId} and diary_id = #{diaryId}
	</update>
	
	<select id="selectGoalList" resultType="project.dto.GoalDto">
		select member_id, goal_id, goal_contents, goal_date, acheive_yn
		  from t_goal
	     where member_id = #{memberId} and goal_id = #{goalId}
	</select>
	
</mapper>